define(["require","shovejs/model/Dictionary"],function(f){var e=f("shovejs/model/Dictionary"),b=function(){this.valueMappingsByClass=new e;this.injectionPointsByClass=new e};b.prototype.mapInjectionFields=function(a){var d=a.injectionFields,c;for(c in d)this.mapInjectionField(a,c,d[c])};b.prototype.mapInjectionField=function(a,d,c){this.injectionPointsByClass.get(a)===void 0&&this.injectionPointsByClass.set(a,{});this.injectionPointsByClass.get(a)[d]=c};b.prototype.mapValue=function(a,d,c){this.valueMappingsByClass.get(a)===
void 0&&this.valueMappingsByClass.set(a,{});this.valueMappingsByClass.get(a)[d]=c};b.prototype.unmapValue=function(a,d){this.valueMappingsByClass.get(a)===void 0&&this.valueMappingsByClass.set(a,{});delete this.valueMappingsByClass.get(a)[d]};b.prototype.injectInto=function(a){console.log("** injectInto **",a);this.parent!=null&&this.parent.injectInto(a);var d=this.injectionPointsByClass.get(a.constructor),c;for(c in d){var b=this.valueMappingsByClass.get(d[c]);b&&((b=b[c])?(console.log("injectInto fieldName: "+
c,b),a[c]=b):console.warn("injectInto fieldName: "+c+" NOT FOUND!"))}};b.prototype.getChild=function(){var a=new b;a.injectionPointsByClass=this.injectionPointsByClass;a.parent=this;return a};console.log("Injector EXPORT");return b});